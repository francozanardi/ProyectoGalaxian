package Logica;

import Mapa.Mapa;

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

public class MainThread extends Thread
{
	///////////////////////////////////////////////////////////////////////////////////////////////
	
	private Mapa	mapa;
	private int		fps;

	///////////////////////////////////////////////////////////////////////////////////////////////
	
	public MainThread( Mapa mapa, int fps )
	{
		this.mapa	= mapa;
		this.fps	= fps;
	}

	///////////////////////////////////////////////////////////////////////////////////////////////
	
	public int getFPS( )
	{
		return this.fps;
	}
	
	public void setFPS( int fps )
	{
		this.fps = fps;
	}
	
	///////////////////////////////////////////////////////////////////////////////////////////////
	
	public void run( )
	{
		long	tiempoActual	= System.nanoTime(),
				tiempoFinal		= tiempoActual + (1000000L * 1000L / fps),
				tiempoUltima	= tiempoActual;
		
		while (true)
		{
			tiempoActual = System.nanoTime();
			
			if (tiempoActual >= tiempoFinal)
			{
				tiempoFinal = tiempoActual + (1000000L * 1000L / fps);
									
				// Actualizaciones del juego, le pasamos la cantidad de MS transcurridos desde la última actualización
				cicloDelJuego( (tiempoActual - tiempoUltima) / 1000000.0 );
					
				tiempoUltima = System.nanoTime();
			}
		}
	}

	///////////////////////////////////////////////////////////////////////////////////////////////
	
	private void cicloDelJuego( double msDesdeUltActualizacion )
	{
		mapa.actualizar( msDesdeUltActualizacion );
		//System.out.printf("tiempo: %f  -  fps: %f\n", msDesdeUltActualizacion, 1000.0 / msDesdeUltActualizacion );
	}
	
	///////////////////////////////////////////////////////////////////////////////////////////////
}

/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////